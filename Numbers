-->Basic Level Questions

How do you declare and initialize an integer and a floating-point number in Java?
What is the difference between int, long, float, and double in Java?
How do you perform basic arithmetic operations like addition, subtraction, multiplication, and division on numbers in Java?
How do you find the remainder of a division operation in Java (using the modulus operator)?
Write a program to check if a given number is even or odd.
How do you convert a string to an integer or float in Java?
What is the difference between int and Integer in Java?
How do you check if a number is positive, negative, or zero?
Write a program to calculate the sum of the digits of a number.
How can you calculate the average of three numbers in Java?


-->  Intermediate Level Questions


Write a program to find the factorial of a number using both iterative and recursive methods.
How do you check if a number is a prime number in Java?
Write a program to reverse a number (e.g., 123 becomes 321).
How do you check if a number is a palindrome in Java?
Write a program to generate Fibonacci series up to n numbers.
How do you find the greatest common divisor (GCD) of two numbers?
How do you find the least common multiple (LCM) of two numbers?
Write a program to print all the prime numbers between two given numbers.
How do you calculate the power of a number in Java (e.g., base^exponent)?
How do you convert a number from one base to another (e.g., binary to decimal)?


-->  Advanced Level Questions


How do you check if a number is a perfect square in Java?
Write a program to check if a number is a perfect number (e.g., 6 is perfect because 1 + 2 + 3 = 6).
How do you find the sum of the digits of a number raised to a power (e.g., sum of digits of 3^5)?
Write a program to find the Armstrong number (e.g., 153 is an Armstrong number because 1^3 + 5^3 + 3^3 = 153).
How do you implement a method to find the square root of a number without using Math.sqrt()?
Write a program to calculate the sum of squares of the first n natural numbers.
How do you handle large numbers in Java, such as calculating factorials for large integers (use BigInteger)?
Write a program to find the nth prime number using an efficient algorithm (e.g., sieve of Eratosthenes).
How do you solve problems like calculating the sum of the digits of a large number using recursion?
How do you implement a number converter that converts a number into its word representation (e.g., 123 to one hundred twenty-three)?


-->  Expert Level Questions


Write a program to calculate the factorial of a large number using BigInteger.
How do you implement a function to calculate the nth Fibonacci number using dynamic programming?
How can you calculate the sum of all divisors of a number?
Write a program to find the largest prime factor of a number.
How do you implement a method to find the number of trailing zeros in a factorial number?
Write a program to determine if a number is a strong number (a number equal to the sum of its own digits raised to the power of the number of digits).
How do you check if a number is a Harshad number (a number that is divisible by the sum of its digits)?
Implement a method to find the number of occurrences of a digit in a given number.
How do you efficiently solve the problem of finding the number of set bits (1's) in the binary representation of a number?
How do you calculate the sum of the digits of all the numbers in a given range?
